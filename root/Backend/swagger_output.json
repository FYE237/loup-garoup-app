{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "REST API",
    "description": ""
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a User by its pseudo",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "id:pseudo of the user to find"
          },
          {
            "name": "x-access-token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a user",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "id:the pseudo of the player to delete"
          },
          {
            "name": "x-access-token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "get all Users",
        "description": "",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "New User",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "name,email,password ",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "John Doe"
                },
                "email": {
                  "type": "string",
                  "example": "xxx@xx.xx"
                },
                "password": {
                  "type": "string",
                  "example": "xxxx"
                }
              },
              "required": [
                "name",
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update the pseudo of a User",
        "description": "",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "name:new value of the pseudo,prev:previous value ",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "vador"
                },
                "prev": {
                  "type": "string",
                  "example": "anakin"
                }
              },
              "required": [
                "name",
                "prev"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Verify credentials of user using email and password and return token",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "name , password",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "John Doe"
                },
                "password": {
                  "type": "string",
                  "example": "12345"
                }
              },
              "required": [
                "name",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/login/{id}": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Check if the pseudo that the user wants to create is already used",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "id:pseudo of the user to find"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/parties/{id}": {
      "post": {
        "tags": [
          "Partie"
        ],
        "summary": "Add player to a game",
        "description": "This request is used to add a player into a game. The game must be pending and it has not reached the player limit.   The id of the game is in the link and the player you wish to add should be specified in the request body.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-access-token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "gameId",
            "in": "path",
            "description": "The ID of the game to add the player to.",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "The player's username.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "id_joueur": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "description": {
                          "type": "string",
                          "example": "The username of the player to add to the game."
                        }
                      }
                    }
                  }
                },
                "required": {
                  "type": "array",
                  "example": [
                    "id_joueur"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The player was added to the game successfully."
          },
          "400": {
            "description": "The request was invalid, check that id_joueur is present."
          },
          "403": {
            "description": "The game is an a pending state."
          },
          "500": {
            "description": "An error occurred while processing the request."
          }
        }
      }
    },
    "/api/parties": {
      "post": {
        "tags": [
          "Partie"
        ],
        "summary": "Create a new game",
        "description": "This request is used to create a new game with the specified parameters.",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "The following values should be placed in the body of the request: heure_debut, nb_participant, hote_name,  duree_jour, duree_nuit, statut, proba_pouvoir_speciaux, proportion_loup",
            "schema": {
              "type": "object",
              "properties": {
                "heure_debut": {
                  "type": "string",
                  "example": "15"
                },
                "nb_participant": {
                  "type": "string",
                  "example": "5"
                },
                "hote_name": {
                  "type": "string",
                  "example": "fye"
                },
                "duree_jour": {
                  "type": "string",
                  "example": "10"
                },
                "duree_nuit": {
                  "type": "string",
                  "example": "15"
                },
                "proba_pouvoir_speciaux": {
                  "type": "string",
                  "example": "0.3"
                },
                "proportion_loup": {
                  "type": "string",
                  "example": "0.3"
                }
              },
              "required": [
                "heure_debut",
                "nb_participant",
                "hote_name",
                "duree_jour",
                "duree_nuit",
                "proba_pouvoir_speciaux",
                "proportion_loup"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Game created successfully."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid request parameters."
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Bad Request"
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal server error."
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/getjwtDeleg/{id}": {
      "get": {
        "tags": [
          "Token"
        ],
        "summary": "Get User Token",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "id:pseudo of the user to find"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/whoami": {
      "get": {
        "tags": [
          "Who am I"
        ],
        "summary": "Get User login",
        "description": "",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id:pseudo of the user to find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/checkadmin": {
      "get": {
        "tags": [
          "Who am I"
        ],
        "summary": "Get User login",
        "description": "",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id:pseudo of the user to find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  }
}