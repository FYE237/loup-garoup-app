stages:                 # Les étapes associées au projet.
  - lint                # Pour la vérification statique du code 
  - build               # fabrication de l'application
  - test                # Test de l'application
  - deploy              # Deploiement

#  Vérification de la qualité du code html et css


TestBackend:
  stage: test
  tags:
    - docker  # Comme on utilise une image pour isoler on doit utiliser un runner docker 
  image: node 
  script:
    - cd root/Backend/src/
    - npm i # Installe ce qui est décrit dans package.json
    - npm run test # Lance les tests jest
  only:
      changes:
        - "*.js"


scalingo:
  stage: deploy
  tags:
    - docker
  variables:
    SCALINGO_APP_NAME: projetwebimag # le nom de votre appli chez scalingo
    SCALINGO_REGION: osc-fr1 # l'instance de scalingo sur laquelle votre appli est déployée
    GIT_DEPTH: 0
    PROJECT_DIR: root/Backend # Le répertoire dans le dépôt où est le backend
  image: ruby:3.1.3 # car dpl est codé en Ruby
  script:
    - gem install dpl --pre # gem est le gestionnaire de paquets pour Ruby
    - curl -O https://cli-dl.scalingo.com/install && bash install # scalingo CLI est installé
    - scalingo --app=$SCALINGO_APP_NAME env-set PROJECT_DIR=$PROJECT_DIR # Pour indiquer sur le dépôt distant où est le backend (s'il est à la racine du projet ceci est facultatif, et il est possible de le faire une fois pour toute directement dans l'interface web de scalingo)
    - dpl --provider=scalingo --app=$SCALINGO_APP_NAME --api-token=$SCALINGO_API_TOKEN --region=$SCALINGO_REGION --branch=refs/heads/main        

 